#!/bin/bash
#
# gfs2 mount/unmount helper
#
# chkconfig: - 26 74
# description: mount/unmount gfs2 filesystems configured in /etc/fstab

### BEGIN INIT INFO
# Provides:		gfs2
# Required-Start:	$network cman
# Required-Stop:	$network cman
# Default-Start:
# Default-Stop:
# Short-Description:	mount/unmount gfs2 filesystems configured in /etc/fstab
# Description:		mount/unmount gfs2 filesystems configured in /etc/fstab
### END INIT INFO

# set secure PATH
PATH="/bin:/usr/bin:/sbin:/usr/sbin:@SBINDIR@"

success()
{
    echo -ne "[  OK  ]\r"
}

failure()
{
    echo -ne "[FAILED]\r"
}

# rpm based distros
if [ -d /etc/sysconfig ]; then
	[ -f @INITDDIR@/functions ] && . @INITDDIR@/functions
	[ -f /etc/sysconfig/cluster ] && . /etc/sysconfig/cluster
	[ -f /etc/sysconfig/gfs2 ] && . /etc/sysconfig/gfs2
	[ -z "$LOCK_FILE" ] && LOCK_FILE="/var/lock/subsys/gfs2"
fi

# deb based distros
if [ -d /etc/default ]; then
	[ -f /etc/default/cluster ] && . /etc/default/cluster
	[ -f /etc/default/gfs2 ] && . /etc/default/gfs2
	[ -z "$LOCK_FILE" ] && LOCK_FILE="/var/lock/gfs2"
fi

#
# This script's behavior is modeled closely after the netfs script.  
#
GFS2FSTAB=$(LC_ALL=C awk '!/^#/ && $3 == "gfs2" && $4 !~ /noauto/ { print $2 }' /etc/fstab)
GFS2MTAB=$(LC_ALL=C awk '!/^#/ && $3 == "gfs2" && $2 != "/" { print $2 }' /proc/mounts)

# See how we were called.
case "$1" in
  start)
        if [ -n "$GFS2FSTAB" ] 
	then
		echo -n "Mounting GFS2 filesystems: "
		mount -a -t gfs2
		rtrn=$?
		if [ $rtrn = 0 ]; then
			touch $LOCK_FILE
			success
			echo
		else
			failure
			echo
		fi
	fi
	;;

  stop)
  	if [ -n "$GFS2MTAB" ] 
	then
		sig=
		retry=6
		remaining=`LC_ALL=C awk '!/^#/ && $3 == "gfs2" && $2 != "/" {print $2}' /proc/mounts`
		while [ -n "$remaining" -a "$retry" -gt 0 ]
		do
			echo -n "Unmounting GFS2 filesystems: "
			umount -a -t gfs2
			rtrn=$?
			if [ $rtrn = 0 ]; then
				success
				echo
			else
				failure
				echo
			fi
			
			if [ $retry -eq 0 ] 
			then
				echo -n "Unmounting GFS2 filesystems (lazy): "
				umount -l -a -t gfs2
				rtrn=$?
				if [ $rtrn = 0 ]; then
					success
					echo
				else
					failure
					echo
				fi
				break
			fi

			sleep 2
			remaining=`LC_ALL=C awk '!/^#/ && $3 == "gfs2" && $2 != "/" {print $2}' /proc/mounts`
			[ -z "$remaining" ] && break
			fuser -k -m $sig $remaining > /dev/null 2>&1
			sleep 10
			retry=$(($retry - 1))
			sig=-9
		done
	fi

	modprobe -r gfs2
	rm -f $LOCK_FILE
	;;

  status)
	if [ -f /proc/mounts ]
	then
	        [ -n "$GFS2FSTAB" ] && {
		     echo "Configured GFS2 mountpoints: "
		     for fs in $GFS2FSTAB; do echo $fs ; done
		}
		[ -n "$GFS2MTAB" ] && {
                      echo "Active GFS2 mountpoints: "
		      for fs in $GFS2MTAB; do echo $fs ; done
		}
	else
		echo "/proc filesystem unavailable"
	fi
	;;

  restart)
	$0 stop
	$0 start
	;;

  reload)
        $0 start
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|reload|status}"
	exit 1
esac

exit 0
